// <auto-generated />
using System;
using FakeEventGenerator.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FakeEventGenerator.Infrastructure.Migrations
{
    [DbContext(typeof(FakeEventGeneratorDBContext))]
    partial class FakeEventGeneratorDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndPossibility")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActionAggregate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("632ffff7-1125-4cf9-9e59-4a25551aed04"),
                            Delay = 131,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Entrance|Entering"
                        },
                        new
                        {
                            Id = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            Delay = 53,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Staircase|Going_up"
                        },
                        new
                        {
                            Id = new Guid("c8874440-bda5-47fb-8dcd-cf241693b600"),
                            Delay = 1063,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Showering"
                        },
                        new
                        {
                            Id = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            Delay = 207,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Using_the_sink"
                        },
                        new
                        {
                            Id = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            Delay = 53,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Staircase|Going_down"
                        },
                        new
                        {
                            Id = new Guid("334b124f-5a8b-4dd9-b1a3-d0142c934522"),
                            Delay = 1668,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Watching_TV"
                        },
                        new
                        {
                            Id = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            Delay = 147,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Toilet|Using_the_toilet"
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            Delay = 9225,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Office|Computing"
                        },
                        new
                        {
                            Id = new Guid("99d0b6ff-155b-421b-9078-05715b165746"),
                            Delay = 112,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Preparing"
                        },
                        new
                        {
                            Id = new Guid("c4ddedc5-1f2b-475e-98de-db5862118615"),
                            Delay = 692,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Cooking"
                        },
                        new
                        {
                            Id = new Guid("23a6aaa7-c6b5-405c-a67c-47f35abcea52"),
                            Delay = 712,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Eating"
                        },
                        new
                        {
                            Id = new Guid("a043da6d-a7ee-434d-ba67-a44c115dc5b4"),
                            Delay = 381,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Washing_the_dishes"
                        },
                        new
                        {
                            Id = new Guid("43ec49e6-5004-4e49-a460-7652d8fee87e"),
                            Delay = 90,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("d644ee52-4e08-47b9-92e3-dc62edf31951"),
                            Delay = 1882,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Computing"
                        },
                        new
                        {
                            Id = new Guid("61302eb5-fc78-4209-9fb3-54acc0413756"),
                            Delay = 95,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Dressing"
                        },
                        new
                        {
                            Id = new Guid("b37a0c41-489d-4142-ab93-9eae45249b73"),
                            Delay = 1738,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Reading"
                        },
                        new
                        {
                            Id = new Guid("87f6fbde-545f-4390-b920-7a06f69d842a"),
                            Delay = 1646,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Napping"
                        },
                        new
                        {
                            Id = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            Delay = 222,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Using_the_toilet"
                        },
                        new
                        {
                            Id = new Guid("3fd2df48-eac4-4784-9128-dcd6f73735d6"),
                            Delay = 1147,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Office|Watching_TV"
                        },
                        new
                        {
                            Id = new Guid("e030a573-a73f-4c68-9378-7a09447dbb37"),
                            Delay = 89,
                            Description = "",
                            EndPossibility = 100,
                            Name = "Entrance|Leaving"
                        },
                        new
                        {
                            Id = new Guid("c7979bf5-d148-449c-a885-9d4108f33e32"),
                            Delay = 119,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("1674c8df-7111-4e4a-8229-e6aef3545719"),
                            Delay = 177,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("2530e204-2314-46d0-985f-a20814bda9e2"),
                            Delay = 132,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("75bd83b1-57c4-4dac-8d8f-e314dc917c70"),
                            Delay = 152,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Office|Cleaning"
                        });
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionCaseExpectation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionCaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("ActionCondition");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("ActionDetail");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultCaseChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultCaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("ActionResult");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.EnvironmentVariable", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Type");

                    b.ToTable("EnvironmentVariable");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.Human", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BodyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeelToDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("MentalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Human");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMovable")
                        .HasColumnType("bit");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("MetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.NextAction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<int>("Possibility")
                        .HasColumnType("int");

                    b.HasKey("Id", "ActionAggregateId");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("NextAction");

                    b.HasData(
                        new
                        {
                            Id = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            ActionAggregateId = new Guid("632ffff7-1125-4cf9-9e59-4a25551aed04"),
                            Delay = 1,
                            Possibility = 90
                        },
                        new
                        {
                            Id = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            ActionAggregateId = new Guid("632ffff7-1125-4cf9-9e59-4a25551aed04"),
                            Delay = 1,
                            Possibility = 5
                        },
                        new
                        {
                            Id = new Guid("334b124f-5a8b-4dd9-b1a3-d0142c934522"),
                            ActionAggregateId = new Guid("632ffff7-1125-4cf9-9e59-4a25551aed04"),
                            Delay = 1,
                            Possibility = 6
                        },
                        new
                        {
                            Id = new Guid("c8874440-bda5-47fb-8dcd-cf241693b600"),
                            ActionAggregateId = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            Delay = 1,
                            Possibility = 33
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            ActionAggregateId = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            Delay = 1,
                            Possibility = 33
                        },
                        new
                        {
                            Id = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            ActionAggregateId = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            Delay = 1,
                            Possibility = 31
                        },
                        new
                        {
                            Id = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            ActionAggregateId = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            Delay = 1,
                            Possibility = 3
                        },
                        new
                        {
                            Id = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            ActionAggregateId = new Guid("c8874440-bda5-47fb-8dcd-cf241693b600"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            ActionAggregateId = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            Delay = 1,
                            Possibility = 44
                        },
                        new
                        {
                            Id = new Guid("61302eb5-fc78-4209-9fb3-54acc0413756"),
                            ActionAggregateId = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            Delay = 1,
                            Possibility = 39
                        },
                        new
                        {
                            Id = new Guid("1674c8df-7111-4e4a-8229-e6aef3545719"),
                            ActionAggregateId = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            Delay = 1,
                            Possibility = 8
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            ActionAggregateId = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            Delay = 1,
                            Possibility = 6
                        },
                        new
                        {
                            Id = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            ActionAggregateId = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            Delay = 1,
                            Possibility = 3
                        },
                        new
                        {
                            Id = new Guid("334b124f-5a8b-4dd9-b1a3-d0142c934522"),
                            ActionAggregateId = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            Delay = 1,
                            Possibility = 29
                        },
                        new
                        {
                            Id = new Guid("99d0b6ff-155b-421b-9078-05715b165746"),
                            ActionAggregateId = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            Delay = 1,
                            Possibility = 33
                        },
                        new
                        {
                            Id = new Guid("e030a573-a73f-4c68-9378-7a09447dbb37"),
                            ActionAggregateId = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            Delay = 1,
                            Possibility = 36
                        },
                        new
                        {
                            Id = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            ActionAggregateId = new Guid("334b124f-5a8b-4dd9-b1a3-d0142c934522"),
                            Delay = 1,
                            Possibility = 12
                        },
                        new
                        {
                            Id = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            ActionAggregateId = new Guid("334b124f-5a8b-4dd9-b1a3-d0142c934522"),
                            Delay = 1,
                            Possibility = 88
                        },
                        new
                        {
                            Id = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            ActionAggregateId = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            Delay = 1,
                            Possibility = 62
                        },
                        new
                        {
                            Id = new Guid("d644ee52-4e08-47b9-92e3-dc62edf31951"),
                            ActionAggregateId = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            Delay = 1,
                            Possibility = 38
                        },
                        new
                        {
                            Id = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            ActionAggregateId = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            Delay = 1,
                            Possibility = 47
                        },
                        new
                        {
                            Id = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            ActionAggregateId = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            Delay = 1,
                            Possibility = 13
                        },
                        new
                        {
                            Id = new Guid("3fd2df48-eac4-4784-9128-dcd6f73735d6"),
                            ActionAggregateId = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            Delay = 1,
                            Possibility = 30
                        },
                        new
                        {
                            Id = new Guid("75bd83b1-57c4-4dac-8d8f-e314dc917c70"),
                            ActionAggregateId = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            Delay = 1,
                            Possibility = 10
                        },
                        new
                        {
                            Id = new Guid("c4ddedc5-1f2b-475e-98de-db5862118615"),
                            ActionAggregateId = new Guid("99d0b6ff-155b-421b-9078-05715b165746"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("23a6aaa7-c6b5-405c-a67c-47f35abcea52"),
                            ActionAggregateId = new Guid("c4ddedc5-1f2b-475e-98de-db5862118615"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("a043da6d-a7ee-434d-ba67-a44c115dc5b4"),
                            ActionAggregateId = new Guid("23a6aaa7-c6b5-405c-a67c-47f35abcea52"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("43ec49e6-5004-4e49-a460-7652d8fee87e"),
                            ActionAggregateId = new Guid("a043da6d-a7ee-434d-ba67-a44c115dc5b4"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("d644ee52-4e08-47b9-92e3-dc62edf31951"),
                            ActionAggregateId = new Guid("43ec49e6-5004-4e49-a460-7652d8fee87e"),
                            Delay = 1,
                            Possibility = 63
                        },
                        new
                        {
                            Id = new Guid("c7979bf5-d148-449c-a885-9d4108f33e32"),
                            ActionAggregateId = new Guid("43ec49e6-5004-4e49-a460-7652d8fee87e"),
                            Delay = 1,
                            Possibility = 21
                        },
                        new
                        {
                            Id = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            ActionAggregateId = new Guid("43ec49e6-5004-4e49-a460-7652d8fee87e"),
                            Delay = 1,
                            Possibility = 16
                        },
                        new
                        {
                            Id = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            ActionAggregateId = new Guid("d644ee52-4e08-47b9-92e3-dc62edf31951"),
                            Delay = 1,
                            Possibility = 93
                        },
                        new
                        {
                            Id = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            ActionAggregateId = new Guid("d644ee52-4e08-47b9-92e3-dc62edf31951"),
                            Delay = 1,
                            Possibility = 7
                        },
                        new
                        {
                            Id = new Guid("b37a0c41-489d-4142-ab93-9eae45249b73"),
                            ActionAggregateId = new Guid("61302eb5-fc78-4209-9fb3-54acc0413756"),
                            Delay = 1,
                            Possibility = 50
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            ActionAggregateId = new Guid("61302eb5-fc78-4209-9fb3-54acc0413756"),
                            Delay = 1,
                            Possibility = 46
                        },
                        new
                        {
                            Id = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            ActionAggregateId = new Guid("61302eb5-fc78-4209-9fb3-54acc0413756"),
                            Delay = 1,
                            Possibility = 4
                        },
                        new
                        {
                            Id = new Guid("87f6fbde-545f-4390-b920-7a06f69d842a"),
                            ActionAggregateId = new Guid("b37a0c41-489d-4142-ab93-9eae45249b73"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("61302eb5-fc78-4209-9fb3-54acc0413756"),
                            ActionAggregateId = new Guid("87f6fbde-545f-4390-b920-7a06f69d842a"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            ActionAggregateId = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            Delay = 1,
                            Possibility = 77
                        },
                        new
                        {
                            Id = new Guid("d1ed482f-ef80-4427-972c-8b21305c2ff9"),
                            ActionAggregateId = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            Delay = 1,
                            Possibility = 11
                        },
                        new
                        {
                            Id = new Guid("1674c8df-7111-4e4a-8229-e6aef3545719"),
                            ActionAggregateId = new Guid("8d7c1a5f-a6ee-4ac8-aeab-9a3e6050e925"),
                            Delay = 1,
                            Possibility = 12
                        },
                        new
                        {
                            Id = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            ActionAggregateId = new Guid("3fd2df48-eac4-4784-9128-dcd6f73735d6"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("043f163c-4e90-4647-9ed2-fab99a9b9742"),
                            ActionAggregateId = new Guid("c7979bf5-d148-449c-a885-9d4108f33e32"),
                            Delay = 1,
                            Possibility = 75
                        },
                        new
                        {
                            Id = new Guid("ac9589f7-81f8-42e7-ba06-c397d5c86907"),
                            ActionAggregateId = new Guid("c7979bf5-d148-449c-a885-9d4108f33e32"),
                            Delay = 1,
                            Possibility = 25
                        },
                        new
                        {
                            Id = new Guid("2530e204-2314-46d0-985f-a20814bda9e2"),
                            ActionAggregateId = new Guid("1674c8df-7111-4e4a-8229-e6aef3545719"),
                            Delay = 1,
                            Possibility = 75
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            ActionAggregateId = new Guid("1674c8df-7111-4e4a-8229-e6aef3545719"),
                            Delay = 1,
                            Possibility = 25
                        },
                        new
                        {
                            Id = new Guid("621131e1-ca10-4e6a-848a-2980569c4222"),
                            ActionAggregateId = new Guid("2530e204-2314-46d0-985f-a20814bda9e2"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("3da4bd97-9e04-4605-8308-e08c39306883"),
                            ActionAggregateId = new Guid("75bd83b1-57c4-4dac-8d8f-e314dc917c70"),
                            Delay = 1,
                            Possibility = 100
                        });
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.SensorDataEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("ActionDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PreDataId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionDetailId");

                    b.ToTable("SensorDataEntity");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionCondition", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("Conditions")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionDetail", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("ActionDetails")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionResult", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("Results")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.NextAction", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("NextActions")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.SensorDataEntity", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionDetail", "ActionDetail")
                        .WithMany("SensorDatas")
                        .HasForeignKey("ActionDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionAggregate", b =>
                {
                    b.Navigation("ActionDetails");

                    b.Navigation("Conditions");

                    b.Navigation("NextActions");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionDetail", b =>
                {
                    b.Navigation("SensorDatas");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using FakeEventGenerator.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FakeEventGenerator.Infrastructure.Migrations
{
    [DbContext(typeof(FakeEventGeneratorDBContext))]
    [Migration("20240802172425_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionAggregate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndPossibility")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ActionAggregate");

                    b.HasData(
                        new
                        {
                            Id = new Guid("09cbb4f4-b294-4e31-98e0-4937c829352a"),
                            Delay = 131,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Entrance|Entering"
                        },
                        new
                        {
                            Id = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            Delay = 53,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Staircase|Going_up"
                        },
                        new
                        {
                            Id = new Guid("419963e9-d544-4568-a4a5-566ad8331fc5"),
                            Delay = 1063,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Showering"
                        },
                        new
                        {
                            Id = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            Delay = 207,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Using_the_sink"
                        },
                        new
                        {
                            Id = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            Delay = 53,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Staircase|Going_down"
                        },
                        new
                        {
                            Id = new Guid("bf8b6585-e818-4b69-a52b-7af4955fdf49"),
                            Delay = 1668,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Watching_TV"
                        },
                        new
                        {
                            Id = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            Delay = 147,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Toilet|Using_the_toilet"
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            Delay = 9225,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Office|Computing"
                        },
                        new
                        {
                            Id = new Guid("25deeb4d-2fc1-4a21-9ab5-8cda61cb3eef"),
                            Delay = 112,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Preparing"
                        },
                        new
                        {
                            Id = new Guid("2c575e89-f134-420f-a5b4-a3c665adc741"),
                            Delay = 692,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Cooking"
                        },
                        new
                        {
                            Id = new Guid("d4f79c1f-0be2-448d-81a0-c97f135fff22"),
                            Delay = 712,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Eating"
                        },
                        new
                        {
                            Id = new Guid("a2ecbf24-3d6c-4f69-af7b-b977bde05558"),
                            Delay = 381,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Washing_the_dishes"
                        },
                        new
                        {
                            Id = new Guid("6a064188-f5f4-4c03-82f5-7bc91fb706ca"),
                            Delay = 90,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("0643e948-3429-4782-b163-20e9ea995d2d"),
                            Delay = 1882,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Living_room|Computing"
                        },
                        new
                        {
                            Id = new Guid("3184275d-3c14-408c-aefa-957fcebbd259"),
                            Delay = 95,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Dressing"
                        },
                        new
                        {
                            Id = new Guid("fc675763-5211-430d-9c19-5b612056cb58"),
                            Delay = 1738,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Reading"
                        },
                        new
                        {
                            Id = new Guid("9c8ff592-e175-46a3-8d6d-2e63055ee950"),
                            Delay = 1646,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Napping"
                        },
                        new
                        {
                            Id = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            Delay = 222,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Using_the_toilet"
                        },
                        new
                        {
                            Id = new Guid("f3bd068d-fb68-4874-8af8-5f2e66ed028d"),
                            Delay = 1147,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Office|Watching_TV"
                        },
                        new
                        {
                            Id = new Guid("0c536f44-97c8-4188-a575-b840ca17f2d3"),
                            Delay = 89,
                            Description = "",
                            EndPossibility = 100,
                            Name = "Entrance|Leaving"
                        },
                        new
                        {
                            Id = new Guid("d955fe65-2ace-4631-adc6-9d01b238d787"),
                            Delay = 119,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Kitchen|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("6b6e5e84-ad35-48d7-893e-04a985453ef2"),
                            Delay = 177,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bathroom|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("36d6c59c-ecea-4838-bf8c-9201202d8aff"),
                            Delay = 132,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Bedroom|Cleaning"
                        },
                        new
                        {
                            Id = new Guid("e4590636-080a-4fe1-840b-6c81bdcfd06f"),
                            Delay = 152,
                            Description = "",
                            EndPossibility = 0,
                            Name = "Office|Cleaning"
                        });
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionCondition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionCaseExpectation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionCaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConditionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("ActionCondition");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("ActionDetail");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CaseStudy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultCaseChange")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultCaseType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ResultType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("ActionResult");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.EnvironmentVariable", b =>
                {
                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Type");

                    b.ToTable("EnvironmentVariable");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.Human", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BodyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeelToDegree")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("MentalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Human");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMovable")
                        .HasColumnType("bit");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<string>("MetaData")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.NextAction", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionAggregateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Delay")
                        .HasColumnType("int");

                    b.Property<int>("Possibility")
                        .HasColumnType("int");

                    b.HasKey("Id", "ActionAggregateId");

                    b.HasIndex("ActionAggregateId");

                    b.ToTable("NextAction");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            ActionAggregateId = new Guid("09cbb4f4-b294-4e31-98e0-4937c829352a"),
                            Delay = 1,
                            Possibility = 90
                        },
                        new
                        {
                            Id = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            ActionAggregateId = new Guid("09cbb4f4-b294-4e31-98e0-4937c829352a"),
                            Delay = 1,
                            Possibility = 5
                        },
                        new
                        {
                            Id = new Guid("bf8b6585-e818-4b69-a52b-7af4955fdf49"),
                            ActionAggregateId = new Guid("09cbb4f4-b294-4e31-98e0-4937c829352a"),
                            Delay = 1,
                            Possibility = 6
                        },
                        new
                        {
                            Id = new Guid("419963e9-d544-4568-a4a5-566ad8331fc5"),
                            ActionAggregateId = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            Delay = 1,
                            Possibility = 33
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            ActionAggregateId = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            Delay = 1,
                            Possibility = 33
                        },
                        new
                        {
                            Id = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            ActionAggregateId = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            Delay = 1,
                            Possibility = 31
                        },
                        new
                        {
                            Id = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            ActionAggregateId = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            Delay = 1,
                            Possibility = 3
                        },
                        new
                        {
                            Id = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            ActionAggregateId = new Guid("419963e9-d544-4568-a4a5-566ad8331fc5"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            ActionAggregateId = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            Delay = 1,
                            Possibility = 44
                        },
                        new
                        {
                            Id = new Guid("3184275d-3c14-408c-aefa-957fcebbd259"),
                            ActionAggregateId = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            Delay = 1,
                            Possibility = 39
                        },
                        new
                        {
                            Id = new Guid("6b6e5e84-ad35-48d7-893e-04a985453ef2"),
                            ActionAggregateId = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            Delay = 1,
                            Possibility = 8
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            ActionAggregateId = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            Delay = 1,
                            Possibility = 6
                        },
                        new
                        {
                            Id = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            ActionAggregateId = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            Delay = 1,
                            Possibility = 3
                        },
                        new
                        {
                            Id = new Guid("bf8b6585-e818-4b69-a52b-7af4955fdf49"),
                            ActionAggregateId = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            Delay = 1,
                            Possibility = 29
                        },
                        new
                        {
                            Id = new Guid("25deeb4d-2fc1-4a21-9ab5-8cda61cb3eef"),
                            ActionAggregateId = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            Delay = 1,
                            Possibility = 33
                        },
                        new
                        {
                            Id = new Guid("0c536f44-97c8-4188-a575-b840ca17f2d3"),
                            ActionAggregateId = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            Delay = 1,
                            Possibility = 36
                        },
                        new
                        {
                            Id = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            ActionAggregateId = new Guid("bf8b6585-e818-4b69-a52b-7af4955fdf49"),
                            Delay = 1,
                            Possibility = 12
                        },
                        new
                        {
                            Id = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            ActionAggregateId = new Guid("bf8b6585-e818-4b69-a52b-7af4955fdf49"),
                            Delay = 1,
                            Possibility = 88
                        },
                        new
                        {
                            Id = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            ActionAggregateId = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            Delay = 1,
                            Possibility = 62
                        },
                        new
                        {
                            Id = new Guid("0643e948-3429-4782-b163-20e9ea995d2d"),
                            ActionAggregateId = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            Delay = 1,
                            Possibility = 38
                        },
                        new
                        {
                            Id = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            ActionAggregateId = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            Delay = 1,
                            Possibility = 47
                        },
                        new
                        {
                            Id = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            ActionAggregateId = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            Delay = 1,
                            Possibility = 13
                        },
                        new
                        {
                            Id = new Guid("f3bd068d-fb68-4874-8af8-5f2e66ed028d"),
                            ActionAggregateId = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            Delay = 1,
                            Possibility = 30
                        },
                        new
                        {
                            Id = new Guid("e4590636-080a-4fe1-840b-6c81bdcfd06f"),
                            ActionAggregateId = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            Delay = 1,
                            Possibility = 10
                        },
                        new
                        {
                            Id = new Guid("2c575e89-f134-420f-a5b4-a3c665adc741"),
                            ActionAggregateId = new Guid("25deeb4d-2fc1-4a21-9ab5-8cda61cb3eef"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("d4f79c1f-0be2-448d-81a0-c97f135fff22"),
                            ActionAggregateId = new Guid("2c575e89-f134-420f-a5b4-a3c665adc741"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("a2ecbf24-3d6c-4f69-af7b-b977bde05558"),
                            ActionAggregateId = new Guid("d4f79c1f-0be2-448d-81a0-c97f135fff22"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("6a064188-f5f4-4c03-82f5-7bc91fb706ca"),
                            ActionAggregateId = new Guid("a2ecbf24-3d6c-4f69-af7b-b977bde05558"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("0643e948-3429-4782-b163-20e9ea995d2d"),
                            ActionAggregateId = new Guid("6a064188-f5f4-4c03-82f5-7bc91fb706ca"),
                            Delay = 1,
                            Possibility = 63
                        },
                        new
                        {
                            Id = new Guid("d955fe65-2ace-4631-adc6-9d01b238d787"),
                            ActionAggregateId = new Guid("6a064188-f5f4-4c03-82f5-7bc91fb706ca"),
                            Delay = 1,
                            Possibility = 21
                        },
                        new
                        {
                            Id = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            ActionAggregateId = new Guid("6a064188-f5f4-4c03-82f5-7bc91fb706ca"),
                            Delay = 1,
                            Possibility = 16
                        },
                        new
                        {
                            Id = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            ActionAggregateId = new Guid("0643e948-3429-4782-b163-20e9ea995d2d"),
                            Delay = 1,
                            Possibility = 93
                        },
                        new
                        {
                            Id = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            ActionAggregateId = new Guid("0643e948-3429-4782-b163-20e9ea995d2d"),
                            Delay = 1,
                            Possibility = 7
                        },
                        new
                        {
                            Id = new Guid("fc675763-5211-430d-9c19-5b612056cb58"),
                            ActionAggregateId = new Guid("3184275d-3c14-408c-aefa-957fcebbd259"),
                            Delay = 1,
                            Possibility = 50
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            ActionAggregateId = new Guid("3184275d-3c14-408c-aefa-957fcebbd259"),
                            Delay = 1,
                            Possibility = 46
                        },
                        new
                        {
                            Id = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            ActionAggregateId = new Guid("3184275d-3c14-408c-aefa-957fcebbd259"),
                            Delay = 1,
                            Possibility = 4
                        },
                        new
                        {
                            Id = new Guid("9c8ff592-e175-46a3-8d6d-2e63055ee950"),
                            ActionAggregateId = new Guid("fc675763-5211-430d-9c19-5b612056cb58"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("3184275d-3c14-408c-aefa-957fcebbd259"),
                            ActionAggregateId = new Guid("9c8ff592-e175-46a3-8d6d-2e63055ee950"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            ActionAggregateId = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            Delay = 1,
                            Possibility = 77
                        },
                        new
                        {
                            Id = new Guid("24f6ae4b-6f99-4e54-865e-748e8297a25c"),
                            ActionAggregateId = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            Delay = 1,
                            Possibility = 11
                        },
                        new
                        {
                            Id = new Guid("6b6e5e84-ad35-48d7-893e-04a985453ef2"),
                            ActionAggregateId = new Guid("87fc718e-898c-499a-a6f4-03c8405f0808"),
                            Delay = 1,
                            Possibility = 12
                        },
                        new
                        {
                            Id = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            ActionAggregateId = new Guid("f3bd068d-fb68-4874-8af8-5f2e66ed028d"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("44337f76-9ff3-422a-84e2-7e8497836844"),
                            ActionAggregateId = new Guid("d955fe65-2ace-4631-adc6-9d01b238d787"),
                            Delay = 1,
                            Possibility = 75
                        },
                        new
                        {
                            Id = new Guid("0f2f7417-6e6f-4d56-8dec-a0a9dd918154"),
                            ActionAggregateId = new Guid("d955fe65-2ace-4631-adc6-9d01b238d787"),
                            Delay = 1,
                            Possibility = 25
                        },
                        new
                        {
                            Id = new Guid("36d6c59c-ecea-4838-bf8c-9201202d8aff"),
                            ActionAggregateId = new Guid("6b6e5e84-ad35-48d7-893e-04a985453ef2"),
                            Delay = 1,
                            Possibility = 75
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            ActionAggregateId = new Guid("6b6e5e84-ad35-48d7-893e-04a985453ef2"),
                            Delay = 1,
                            Possibility = 25
                        },
                        new
                        {
                            Id = new Guid("59c69ddc-7f2a-4241-be3b-74ccabc8a03a"),
                            ActionAggregateId = new Guid("36d6c59c-ecea-4838-bf8c-9201202d8aff"),
                            Delay = 1,
                            Possibility = 100
                        },
                        new
                        {
                            Id = new Guid("ce2ec480-d55b-498e-bf9c-13147ae3c543"),
                            ActionAggregateId = new Guid("e4590636-080a-4fe1-840b-6c81bdcfd06f"),
                            Delay = 1,
                            Possibility = 100
                        });
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.SensorDataEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ActionDetailId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActionDetailId");

                    b.ToTable("SensorDataEntity");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionCondition", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("Conditions")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionDetail", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("ActionDetails")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionResult", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("Results")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.NextAction", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionAggregate", "ActionAggregate")
                        .WithMany("NextActions")
                        .HasForeignKey("ActionAggregateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionAggregate");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.SensorDataEntity", b =>
                {
                    b.HasOne("FakeEventGenerator.Domain.Models.ActionDetail", "ActionDetail")
                        .WithMany("SensorDatas")
                        .HasForeignKey("ActionDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ActionDetail");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionAggregate", b =>
                {
                    b.Navigation("ActionDetails");

                    b.Navigation("Conditions");

                    b.Navigation("NextActions");

                    b.Navigation("Results");
                });

            modelBuilder.Entity("FakeEventGenerator.Domain.Models.ActionDetail", b =>
                {
                    b.Navigation("SensorDatas");
                });
#pragma warning restore 612, 618
        }
    }
}
